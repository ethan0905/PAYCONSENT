import { useState } from "react";
import "../assets/css/form.css";
import "../assets/css/button.css";
import "../assets/css/summary-page.css";
import Logo from "../assets/PAYCONSENT.svg"
import axios from "axios";
import FormData from "form-data";


const starton = axios.create({
  baseURL: "https://api.starton.io/v3",
});

async function uploadFiletoIpfs(file){
  const data = new FormData();
  data.append("file", file, file.name);
  data.append("isSync", true);
  const res = await starton.post("/ipfs/file", data, {
    headers: {
      "x-api-key": "sk_live_89c7396e-c994-415e-9127-8bb3f7b8a7d4",
      "Content-Type": "multipart/form-data",
    },
  });
  return (res.data);
}


async function deployContract(type_creator_user, type_other_user, creator_user, other_user, transactionAmount, urls){
  const res = await starton.post("/smart-contract/from-bytecode",
	{
		name: "Our own smart contract",
		description: "test 1 from Starton",
		network: "binance-testnet",
		signerWallet: "0xEa2F4211CD978848B250DeC10C2521FDD91097a2",
		speed: "average",
		bytecode: "60806040523480156200001157600080fd5b5060405162002ab538038062002ab583398181016040528101906200003791906200062d565b33600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604051806060016040528087600181111562000099576200009862000856565b5b815260200160006003811115620000b557620000b462000856565b5b81526020018473ffffffffffffffffffffffffffffffffffffffff16815250600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff0219169083600181111562000141576200014062000856565b5b021790555060208201518160000160016101000a81548160ff0219169083600381111562000174576200017362000856565b5b021790555060408201518160000160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506040518060600160405280866001811115620001e457620001e362000856565b5b8152602001600060038111156200020057620001ff62000856565b5b81526020018573ffffffffffffffffffffffffffffffffffffffff16815250600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff021916908360018111156200028c576200028b62000856565b5b021790555060208201518160000160016101000a81548160ff02191690836003811115620002bf57620002be62000856565b5b021790555060408201518160000160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050816000819055506000600460006101000a81548160ff021916908360038111156200033e576200033d62000856565b5b0217905550806000815181106200035a5762000359620008b4565b5b602002602001015160026000600281106200037a5762000379620008b4565b5b01908051906020019062000390929190620003eb565b5080600181518110620003a857620003a7620008b4565b5b60200260200101516002600160028110620003c857620003c7620008b4565b5b019080519060200190620003de929190620003eb565b5050505050505062000981565b828054620003f990620007ea565b90600052602060002090601f0160209004810192826200041d576000855562000469565b82601f106200043857805160ff191683800117855562000469565b8280016001018555821562000469579182015b82811115620004685782518255916020019190600101906200044b565b5b5090506200047891906200047c565b5090565b5b80821115620004975760008160009055506001016200047d565b5090565b6000620004b2620004ac8462000711565b620006e8565b90508083825260208201905082856020860282011115620004d857620004d762000917565b5b60005b858110156200052d57815167ffffffffffffffff81111562000502576200050162000912565b5b808601620005118982620005e3565b85526020850194506020840193505050600181019050620004db565b5050509392505050565b60006200054e620005488462000740565b620006e8565b9050828152602081018484840111156200056d576200056c6200091c565b5b6200057a848285620007b4565b509392505050565b60008151905062000593816200093c565b92915050565b600082601f830112620005b157620005b062000912565b5b8151620005c38482602086016200049b565b91505092915050565b600081519050620005dd8162000956565b92915050565b600082601f830112620005fb57620005fa62000912565b5b81516200060d84826020860162000537565b91505092915050565b600081519050620006278162000967565b92915050565b60008060008060008060c087890312156200064d576200064c62000926565b5b60006200065d89828a01620005cc565b96505060206200067089828a01620005cc565b95505060406200068389828a0162000582565b94505060606200069689828a0162000582565b9350506080620006a989828a0162000616565b92505060a087015167ffffffffffffffff811115620006cd57620006cc62000921565b5b620006db89828a0162000599565b9150509295509295509295565b6000620006f462000707565b905062000702828262000820565b919050565b6000604051905090565b600067ffffffffffffffff8211156200072f576200072e620008e3565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156200075e576200075d620008e3565b5b62000769826200092b565b9050602081019050919050565b600062000783826200078a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015620007d4578082015181840152602081019050620007b7565b83811115620007e4576000848401525b50505050565b600060028204905060018216806200080357607f821691505b602082108114156200081a576200081962000885565b5b50919050565b6200082b826200092b565b810181811067ffffffffffffffff821117156200084d576200084c620008e3565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b620009478162000776565b81146200095357600080fd5b50565b600281106200096457600080fd5b50565b6200097281620007aa565b81146200097e57600080fd5b50565b61212480620009916000396000f3fe6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b146101295780638ef44b7a14610154578063aaa3de261461016b578063b8b4f1a01461019a578063d942bffa146101b157610091565b80630ad69e1c146100965780631f9569ef146100c15780632b68bb2d146100cb578063796676be146100e25780637a07b1021461011f575b600080fd5b3480156100a257600080fd5b506100ab6101dc565b6040516100b89190611a49565b60405180910390f35b6100c96101f3565b005b3480156100d757600080fd5b506100e06103d2565b005b3480156100ee57600080fd5b50610109600480360381019061010491906117ab565b6107bc565b6040516101169190611a64565b60405180910390f35b61012761085f565b005b34801561013557600080fd5b5061013e610c61565b60405161014b9190611a2e565b60405180910390f35b34801561016057600080fd5b50610169610c87565b005b34801561017757600080fd5b506101806110f8565b604051610191959493929190611c01565b60405180910390f35b3480156101a657600080fd5b506101af6114c2565b005b3480156101bd57600080fd5b506101c6611735565b6040516101d39190611be6565b60405180910390f35b6000600460009054906101000a900460ff16905090565b600073ffffffffffffffffffffffffffffffffffffffff16600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415801561030457506001808111156102a05761029f611de0565b5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600181111561030257610301611de0565b5b145b610343576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033a90611ae6565b60405180910390fd5b6002600381111561035757610356611de0565b5b600460009054906101000a900460ff16600381111561037957610378611de0565b5b146103b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b090611ba6565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b600073ffffffffffffffffffffffffffffffffffffffff16600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141580156105615750600060018111156104805761047f611de0565b5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660018111156104e2576104e1611de0565b5b148061056057506001808111156104fc576104fb611de0565b5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600181111561055e5761055d611de0565b5b145b5b6105a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059790611bc6565b60405180910390fd5b600160038111156105b4576105b3611de0565b5b600460009054906101000a900460ff1660038111156105d6576105d5611de0565b5b1115610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90611b06565b60405180910390fd5b6000600381111561062b5761062a611de0565b5b600460009054906101000a900460ff16600381111561064d5761064c611de0565b5b14806106a557506001600381111561066857610667611de0565b5b600460009054906101000a900460ff16600381111561068a57610689611de0565b5b1480156106a457504260026001546106a29190611c70565b105b5b156107ba57600060018111156106be576106bd611de0565b5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660018111156107205761071f611de0565b5b141561073f573373ffffffffffffffffffffffffffffffffffffffff16ff5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b565b600281600281106107cc57600080fd5b0160009150905080546107de90611d7f565b80601f016020809104026020016040519081016040528092919081815260200182805461080a90611d7f565b80156108575780601f1061082c57610100808354040283529160200191610857565b820191906000526020600020905b81548152906001019060200180831161083a57829003601f168201915b505050505081565b600073ffffffffffffffffffffffffffffffffffffffff16600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415801561097157506000600181111561090d5761090c611de0565b5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600181111561096f5761096e611de0565b5b145b6109b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a790611b46565b60405180910390fd5b600160038111156109c4576109c3611de0565b5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff166003811115610a2657610a25611de0565b5b10610a66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5d90611ac6565b60405180910390fd5b60016003811115610a7a57610a79611de0565b5b60056000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff166003811115610b3e57610b3d611de0565b5b14610b7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7590611b66565b60405180910390fd5b6000543414610bc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb990611a86565b60405180910390fd5b6001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff02191690836003811115610c2857610c27611de0565b5b02179055506001600460006101000a81548160ff02191690836003811115610c5357610c52611de0565b5b021790555042600181905550565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff16600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614158015610e16575060006001811115610d3557610d34611de0565b5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166001811115610d9757610d96611de0565b5b1480610e155750600180811115610db157610db0611de0565b5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166001811115610e1357610e12611de0565b5b145b5b610e55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4c90611bc6565b60405180910390fd5b60016003811115610e6957610e68611de0565b5b600460009054906101000a900460ff166003811115610e8b57610e8a611de0565b5b14610ecb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec290611b86565b60405180910390fd5b60016003811115610edf57610ede611de0565b5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff166003811115610f4157610f40611de0565b5b14610f81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7890611aa6565b60405180910390fd5b6002600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff02191690836003811115610fe757610fe6611de0565b5b02179055506002600381111561100057610fff611de0565b5b60056000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff1660038111156110c4576110c3611de0565b5b14156110f6576002600460006101000a81548160ff021916908360038111156110f0576110ef611de0565b5b02179055505b565b600080600061110561173b565b60008073ffffffffffffffffffffffffffffffffffffffff16600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141580156112955750600060018111156111b4576111b3611de0565b5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600181111561121657611215611de0565b5b148061129457506001808111156112305761122f611de0565b5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16600181111561129257611291611de0565b5b145b5b6112d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112cb90611bc6565b60405180910390fd5b4733600460009054906101000a900460ff16600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060056000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff16816040518060600160405290816000820160009054906101000a900460ff16600181111561140857611407611de0565b5b600181111561141a57611419611de0565b5b81526020016000820160019054906101000a900460ff16600381111561144357611442611de0565b5b600381111561145557611454611de0565b5b81526020016000820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509150945094509450945094509091929394565b600073ffffffffffffffffffffffffffffffffffffffff16600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141580156115d3575060018081111561156f5761156e611de0565b5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1660018111156115d1576115d0611de0565b5b145b611612576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160990611ae6565b60405180910390fd5b6000600381111561162657611625611de0565b5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff16600381111561168857611687611de0565b5b146116c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116bf90611b26565b60405180910390fd5b6001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff0219169083600381111561172e5761172d611de0565b5b0217905550565b60005481565b60405180606001604052806000600181111561175a57611759611de0565b5b81526020016000600381111561177357611772611de0565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000813590506117a5816120d7565b92915050565b6000602082840312156117c1576117c0611e3e565b5b60006117cf84828501611796565b91505092915050565b6117e181611cc6565b82525050565b6117f081611cc6565b82525050565b6117ff81611d28565b82525050565b61180e81611d28565b82525050565b61181d81611d3a565b82525050565b600061182e82611c54565b6118388185611c5f565b9350611848818560208601611d4c565b61185181611e43565b840191505092915050565b6000611869601283611c5f565b915061187482611e54565b602082019050919050565b600061188c601083611c5f565b915061189782611e7d565b602082019050919050565b60006118af601f83611c5f565b91506118ba82611ea6565b602082019050919050565b60006118d2601883611c5f565b91506118dd82611ecf565b602082019050919050565b60006118f5602183611c5f565b915061190082611ef8565b604082019050919050565b6000611918601e83611c5f565b915061192382611f47565b602082019050919050565b600061193b601683611c5f565b915061194682611f70565b602082019050919050565b600061195e602683611c5f565b915061196982611f99565b604082019050919050565b6000611981602f83611c5f565b915061198c82611fe8565b604082019050919050565b60006119a4601983611c5f565b91506119af82612037565b602082019050919050565b60006119c7602383611c5f565b91506119d282612060565b604082019050919050565b6060820160008201516119f36000850182611814565b506020820151611a0660208501826117f6565b506040820151611a1960408501826117d8565b50505050565b611a2881611d1e565b82525050565b6000602082019050611a4360008301846117e7565b92915050565b6000602082019050611a5e6000830184611805565b92915050565b60006020820190508181036000830152611a7e8184611823565b905092915050565b60006020820190508181036000830152611a9f8161185c565b9050919050565b60006020820190508181036000830152611abf8161187f565b9050919050565b60006020820190508181036000830152611adf816118a2565b9050919050565b60006020820190508181036000830152611aff816118c5565b9050919050565b60006020820190508181036000830152611b1f816118e8565b9050919050565b60006020820190508181036000830152611b3f8161190b565b9050919050565b60006020820190508181036000830152611b5f8161192e565b9050919050565b60006020820190508181036000830152611b7f81611951565b9050919050565b60006020820190508181036000830152611b9f81611974565b9050919050565b60006020820190508181036000830152611bbf81611997565b9050919050565b60006020820190508181036000830152611bdf816119ba565b9050919050565b6000602082019050611bfb6000830184611a1f565b92915050565b600060e082019050611c166000830188611a1f565b611c2360208301876117e7565b611c306040830186611805565b611c3d60608301856119dd565b611c4a60c0830184611805565b9695505050505050565b600081519050919050565b600082825260208201905092915050565b6000611c7b82611d1e565b9150611c8683611d1e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611cbb57611cba611db1565b5b828201905092915050565b6000611cd182611cfe565b9050919050565b6000819050611ce6826120af565b919050565b6000819050611cf9826120c3565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611d3382611cd8565b9050919050565b6000611d4582611ceb565b9050919050565b60005b83811015611d6a578082015181840152602081019050611d4f565b83811115611d79576000848401525b50505050565b60006002820490506001821680611d9757607f821691505b60208210811415611dab57611daa611e0f565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f4973206e6f7420676f6f6420616d6f756e740000000000000000000000000000600082015250565b7f416c72656164792076616c696461746500000000000000000000000000000000600082015250565b7f74686520636f6e74726163742068617320616c7265616479207369676e656400600082015250565b7f596f7520617265206e6f74207468652072656365697665720000000000000000600082015250565b7f63616e6e6f742063616e63656c206120636f6d706c65746520636f6e7472616360008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b7f74686520636f6e747261637420697320616c7265616479207369676e65640000600082015250565b7f596f7520617265206e6f74207468652073656e64657200000000000000000000600082015250565b7f74686520636f6e7472616374206f66206f746865722073696465206973206e6f60008201527f74207369676e0000000000000000000000000000000000000000000000000000602082015250565b7f53746174757320636f6e7472616374206973206e6f74207369676e206f72206160008201527f6c72656164792076616c69646174650000000000000000000000000000000000602082015250565b7f436f6e7472616374206973206e6f7420636f6d706c6574656400000000000000600082015250565b7f596f7520617265206e6f7420616c6c6f77656420746f2075736520636f6e747260008201527f6163740000000000000000000000000000000000000000000000000000000000602082015250565b600481106120c0576120bf611de0565b5b50565b600281106120d4576120d3611de0565b5b50565b6120e081611d1e565b81146120eb57600080fd5b5056fea2646970667358221220b896482409277726152e24916f7a7cc53a6e5dfa7d5371b653ca716cba27e87664736f6c63430008070033",
		abi: [
			{
				inputs: [
					{
						internalType: "enum PayConsent.user_type",
						name: "t_creator_user",
						type: "uint8"
					},
					{
						internalType: "enum PayConsent.user_type",
						name: "t_other_user",
						type: "uint8"
					},
					{
						internalType: "address",
						name: "creator_user",
						type: "address"
					},
					{
						internalType: "address",
						name: "other_user",
						type: "address"
					},
					{
						internalType: "uint256",
						name: "_transactionAmount",
						type: "uint256"
					},
					{
						internalType: "string[]",
						name: "_urls",
						type: "string[]"
					}
				],
				stateMutability: "nonpayable",
				type: "constructor"
			},
			{
				inputs: [],
				name: "ClaimMoney",
				outputs: [],
				stateMutability: "payable",
				type: "function"
			},
			{
				inputs: [],
				name: "ValidateContract",
				outputs: [],
				stateMutability: "nonpayable",
				type: "function"
			},
			{
				inputs: [],
				name: "cancelContract",
				outputs: [],
				stateMutability: "nonpayable",
				type: "function"
			},
			{
				inputs: [],
				name: "getStatusContract",
				outputs: [
					{
						internalType: "enum PayConsent.status",
						name: "",
						type: "uint8"
					}
				],
				stateMutability: "view",
				type: "function"
			},
			{
				inputs: [],
				name: "getUsersInfo",
				outputs: [
					{
						internalType: "uint256",
						name: "",
						type: "uint256"
					},
					{
						internalType: "address",
						name: "",
						type: "address"
					},
					{
						internalType: "enum PayConsent.status",
						name: "",
						type: "uint8"
					},
					{
						components: [
							{
								internalType: "enum PayConsent.user_type",
								name: "t_user",
								type: "uint8"
							},
							{
								internalType: "enum PayConsent.status",
								name: "status_user",
								type: "uint8"
							},
							{
								internalType: "address",
								name: "other_side",
								type: "address"
							}
						],
						internalType: "struct PayConsent.user",
						name: "",
						type: "tuple"
					},
					{
						internalType: "enum PayConsent.status",
						name: "",
						type: "uint8"
					}
				],
				stateMutability: "view",
				type: "function"
			},
			{
				inputs: [],
				name: "owner",
				outputs: [
					{
						internalType: "address",
						name: "",
						type: "address"
					}
				],
				stateMutability: "view",
				type: "function"
			},
			{
				inputs: [],
				name: "payAndSign",
				outputs: [],
				stateMutability: "payable",
				type: "function"
			},
			{
				inputs: [],
				name: "signContract",
				outputs: [],
				stateMutability: "nonpayable",
				type: "function"
			},
			{
				inputs: [],
				name: "transactionAmount",
				outputs: [
					{
						internalType: "uint256",
						name: "",
						type: "uint256"
					}
				],
				stateMutability: "view",
				type: "function"
			},
			{
				inputs: [
					{
						internalType: "uint256",
						name: "",
						type: "uint256"
					}
				],
				name: "urls",
				outputs: [
					{
						internalType: "string",
						name: "",
						type: "string"
					}
				],
				stateMutability: "view",
				type: "function"
			}
		],
		params: [
			String(type_creator_user),
			String(type_other_user),
			String(creator_user),
			String(other_user),
			String(transactionAmount),
      [
		String(urls[0]),
		String(urls[1])
      
      ]
		]},
    {
      headers:{
        "x-api-key": "sk_live_89c7396e-c994-415e-9127-8bb3f7b8a7d4",
      }
    }
  )}

function FormPage() {
	const [contractInfo, setContractInfo] = useState({
		dest: "",
		amount:"",
    type_user:2,
	});
  let urls = [];

  function handleChange(evt) {
		const value = evt.target.value;
		setContractInfo({
			...contractInfo,
			[evt.target.name]: value
		});
	}

  const handleSubmit = (event) => {
    event.preventDefault();
  }
  const handleSubmission = () => {};

  const changeHandler = async (event) => {
    if (event.target.files[0] && event.target.files[1]) {
      urls[0] = uploadFiletoIpfs(event.target.files[0]).cid;
      urls[1] = uploadFiletoIpfs(event.target.files[1]).cid;
    }
  };

  console.log(contractInfo);
  return (
    <>
      <div>
        {/* <h1 className="logo-over-white">
          PAYCONSENT<span className="dot-color">.</span>
        </h1> */}
        <img src={Logo} alt="Logo" className="h-[30px] ml-[80px] mt-[30px]"/>
      </div>
      <div className="total-form">
        <form className="form-div-total" onSubmit={handleSubmit}>
          <div className="green-line"></div>
          <div className="form-div">
            <div className="form-div1">
              <div className="title-form">
                <h1>Create a contract</h1>
              </div>
              <div className="status-div">
                <div className="label-status">
                  <label className="status-title">
                    Status
                  </label>
                  <p className="text-[13px]">Seller or Buyer</p>
                </div>
                <div className="select-box-div">
                  <select className="select-box" onChange={handleChange} value={contractInfo.type_user} name="type_user">
                    <option value="2" disabled>
                      Status
                    </option>
                    <option value="0">Buyer</option>
                    <option value="1">Seller</option>
                  </select>
                </div>
              </div>
            </div>
            <div className="form-div2">
              <div className="status-div">
                <div className="label-status">
                  <label className="status-title">
                    My Wallet ID
                  </label>
                  <p className="text-[13px]">The creator of this contract</p>
                </div>
                <div className="select-box-div">
                  <div className="wallet-id-total">
                    <div className="wallet-id-section">
                      <div className="id-metamask-form">
                        <i className="fas fa-hashtag"></i>
                        <strong className="id-name">{ethereum.selectedAddress}</strong>
                        <i
                          style={{ cursor: "pointer", marginLeft: 2 }}
                          onClick={() => {
                            navigator.clipboard.writeText(ethereum.selectedAddress);
                          }}
                          className="far fa-clone"
                        ></i>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div className="status-div">
                <div className="label-status">
                  <label className="status-title">
                    Subject
                  </label>
                  <p className="text-[13px]">About the contract</p>
                </div>
                <div className="select-box-div">
                  <textarea
                    className="select-box"
                    id="exampleFormControlTextarea13"
                    rows="3"
                    placeholder="Enter the subject of this contract"
                  ></textarea>
                </div>
              </div>
              <div className="status-div">
                <div className="label-status">
                  <label className="status-title">
                    Sending To
                  </label>
                  <p className="text-[13px]">The receiver</p>
                </div>
                <div className="select-box-div">
                  <input
                    className="select-box"
                    id="exampleInput8"
                    placeholder="Enter the receiver's wallet ID"
                    onChange={handleChange}
                    value={contractInfo.dest} name="dest"
                  />
                </div>
              </div>
              <div className="status-div-upload">
                <div className="label-status">
                  <label className="status-title">File To Upload</label>
                  <p className="text-[13px]">(Quotation, Specifications ...)</p>
                </div>
                <div>
                  <div className="upload-btn-wrapper">
                    <button className="btn" onClick={handleSubmission}>
                      {urls.length == 2 ? "Files Uploaded" : "Upload a file"}
                    </button>
                    <input
                      onChange={() => changeHandler(event)}
                      type="file"
                      name="myfile"
                      multiple
                    />
                  </div>
                </div>
              </div>

              <div className="status-div">
                <div className="label-status">
                  <label className="status-title">
                    Price
                  </label>
                </div>
                <div className="select-box-div-price">
                  <input
                    className="select-box-price"
                    type="price"
                    id="exampleInput8"
                    placeholder="Price"
                    onChange={handleChange}
                    value={contractInfo.amount} name="amount"
                  />
                  <p className="bnb-tag">BNB</p>
                </div>
              </div>
            </div>
            <div className="form-div3">
              <div>
                <button className="text-[13px]" type="dismiss">
                  Dismiss
                </button>
              </div>
              <div>
                <button className="btn-connexion"
                onClick={() => {
                  console.log(contractInfo.type_user);
                  let res;
                  if (contractInfo.type_user == 0)
                    res = deployContract(0, 1, ethereum.selectedAddress, contractInfo.dest, contractInfo.amount, urls);

                  else
                    res = deployContract(1, 0, ethereum.selectedAddress, contractInfo.dest, contractInfo.amount, urls);
                  console.log(res);
                }}>
                  Submit
                </button>
              </div>
            </div>
          </div>
        </form>
      </div>
    </>
  );
}

export default FormPage;
